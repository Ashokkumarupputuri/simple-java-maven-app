properties([parameters([string(name: 'Bucket_Name1', defaultValue: 'packer-packer'),string(name: 'Bucket_Name2', defaultValue: 'pack-pack'),string(name: 'Bucket_Name3', defaultValue: 'none')])])
pipeline {
    agent {
        docker {
            image 'devopscafe/maven-awscli'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
            post {
                failure  {
                    emailext  (
                to: "ashokreset@gmail.com",
                subject: "Job Failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """=== Job Details as Below === 
                  Job Name = '${env.JOB_NAME}'
                  Job Build Number = '${env.BUILD_NUMBER}'
                  Build Info @ '${env.BUILD_URL}' 
                  """
            )
                }
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
        stage('Store-in-S3') {
            steps {
                sh "aws s3 cp /var/lib/jenkins/workspace/ash/target/my-app-1.0-SNAPSHOT.jar s3://${params.Bucket_Name1}/"
            }
        }
        stage('Store-in-S3b') {
            steps {
                input message: 'allow?'
                sh "aws s3 cp /var/lib/jenkins/workspace/ash/target/my-app-1.0-SNAPSHOT.jar s3://${params.Bucket_Name2}/"
            }
        }
    }
    stage('Store-in-S3c') {
            steps {
                def Bucket_Name3 = "dock-dock"
                sh "aws s3 cp /var/lib/jenkins/workspace/ash/target/my-app-1.0-SNAPSHOT.jar s3://${params.Bucket_Name3}/"
            }
        }
}
